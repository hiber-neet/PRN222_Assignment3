@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="container">
    <header class="d-flex justify-content-md-between justify-content-center flex-wrap py-3">
        <NavLink href="/" class="text-light text-decoration-none fs-4 fw-bold">Ecommerce Blazor</NavLink>
        <ul class="nav">
            
            @if (!IsAdmin)
            {
                <li><NavLink href="/user/products" class="link-light nav-link">Home</NavLink></li>
                <li><NavLink href="/profile" class="link-light nav-link">About</NavLink></li>
            }
            @if (IsAdmin)
            {
                <li><NavLink href="/member" class="link-light nav-link">Member Management</NavLink></li>
                <li><NavLink href="/product" class="link-light nav-link">Product Management</NavLink></li>
                <li><NavLink href="/OrderManagement" class="link-light nav-link">Order Management</NavLink></li>
                <li><NavLink href="/salesreport" class="link-light nav-link">Sale Report</NavLink></li>
                <li><NavLink href="/searchproduct" class="link-light nav-link">Search Product</NavLink></li>
            }
        </ul>

        <div class="text-end">
            @if (IsUserLoggedIn)
            {
                <button class="btn btn-warning" @onclick="Logout">LogOut</button>
            }
            else
            {
                <NavLink href="/Login" class="btn btn-warning">LogIn</NavLink>
            }
        </div>
    </header>
</div>

@code {
    private string? UserEmail => HttpContextAccessor.HttpContext?.Session.GetString("Email");
    private bool IsUserLoggedIn => !string.IsNullOrEmpty(UserEmail);
    private bool IsAdmin => UserEmail == "admin@estore.com";

    protected override async Task OnInitializedAsync()
    {
        await Task.Yield(); // Đợi UI render xong

        if (!IsAdmin && (NavigationManager.Uri.Contains("/member-management") ||
                         NavigationManager.Uri.Contains("/product-management") ||
                         NavigationManager.Uri.Contains("/order-management") ||
                         NavigationManager.Uri.Contains("/salesreport") ||
                         NavigationManager.Uri.Contains("/searchproduct")))
        {
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
    }

    private async Task Logout()
    {
        try
        {
            HttpContextAccessor.HttpContext?.Session.Clear();
            StateHasChanged();
            NavigationManager.NavigateTo("/Login", forceLoad: true);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Sign out fail " + ex.Message);
        }
    }
}
