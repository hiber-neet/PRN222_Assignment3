@page "/Login"

@using Asm03Solution.Components.ViewModels
@using BusinessObject.Services
@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.Extensions.Configuration

@inject IConfiguration Configuration;
@inject MemberService userAccountService;
@inject NavigationManager NavigationManager

<div class="row mt-3">
	<div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
		<EditForm Model="@Model" OnValidSubmit="Authenticate" FormName="LoginForm">
			<DataAnnotationsValidator />
			<div class="mb-3 text-center flex-column">
				<h3>Login</h3>
			</div>

			<div class="mb-3">
				<label>Email</label>
				<InputText @bind-Value="@Model.Email" class="form-control" placeholder="Email" />
				<ValidationMessage For="@(() => Model.Email)" />
			</div>

			<div class="mb-3">
				<label>PassWord</label>
				<InputText @bind-Value="@Model.PassWord" class="form-control" placeholder="PassWord" />
				<ValidationMessage For="@(() => Model.PassWord)" />
			</div>

			<div class="mb-3 text-center">
				<span class="text-danger">@ErrorMessage</span>
			</div>

			<div class="mb-3 d-grid gap-2">
				<button type="submit" class="btn btn-primary">Login</button>
			</div>
		</EditForm>
	</div>
</div>

@code {
	[CascadingParameter]
	public HttpContext? HttpContext { get; set; }

	[SupplyParameterFromForm]
	private LoginViewModel Model { get; set; } = new();

	private string? ErrorMessage = "";

	private async Task Authenticate()
	{
		//default account appsettings
		var defaultEmail = Configuration["DefaultAccount:Email"];
		var defaultPassword = Configuration["DefaultAccount:Password"];
		if (Model.Email == defaultEmail && Model.PassWord == defaultPassword)
		{
			Console.WriteLine("Login success Admin");
			HttpContext?.Session.SetString("Email", "admin@estore.com");
			NavigationManager.NavigateTo("/");
			return;
		}

		var userAccount = await userAccountService.LogIn(Model.Email, Model.PassWord);

		if (userAccount == null)
		{
			ErrorMessage = "Invalid UserName or Password";
			return;
		}
		HttpContext?.Session.SetString("Email", userAccount.Email);
		NavigationManager.NavigateTo("/profile");
		Console.WriteLine("Login success");

	}
}
